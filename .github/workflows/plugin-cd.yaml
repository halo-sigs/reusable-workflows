name: CD

on:
  workflow_call:
    inputs:
      artifacts-path:
        type: string
        required: false
        default: build/libs
        description: Artifacts path, default is build/libs. Must be a folder.
      ui-path:
        description: Path of UI project.
        type: string
        required: false
        default: "console"
      skip-node-setup:
        description: Indicates if the node setup should be skipped.
        type: boolean
        required: false
        default: false
      skip-appstore-release:
        description: Indicates if the appstore release should be skipped.
        type: boolean
        required: false
        default: false
      app-id:
        description: Application ID from Halo Appstore.
        required: true
        type: string
      halo-backend-baseurl:
        description: Base URL of Halo Appstore.
        required: false
        default: https://www.halo.run
        type: string
    secrets:
      halo-username:
        description: Username of Halo Appstore.
        required: true
      halo-password:
        description: Password of Halo Appstore.
        required: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        uses: halo-sigs/actions/plugin-setup-env@v1
        with:
          cache-dept-path: ${{ inputs.ui-path }}/pnpm-lock.yaml
          skip-node-setup: ${{ inputs.skip-node-setup }}
      - name: Build
        run: ./gradlew -Pversion=${{ github.event.release.tag_name }} build -x check
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
          retention-days: 1

  github-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
      - name: Upload Release Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ${{ inputs.artifacts-path }}/*
  appstore-release:
    name: Appstore Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && ${{ !inputs.skip-appstore-release }}
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
      - name: Release to Appstore
        uses: halo-sigs/app-store-release-action@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          app-id: ${{ inputs.app-id }}
          halo-backend-baseurl: ${{ inputs.halo-backend-baseurl }}
          release-id: ${{ github.event.release.id }}
          assets-dir: ${{ inputs.artifacts-path }}
          halo-username: ${{ secrets.halo-username }}
          halo-password: ${{ secrets.halo-password }}
