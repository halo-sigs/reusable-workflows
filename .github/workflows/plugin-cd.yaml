name: CD

on:
  workflow_call:
    inputs:
      artifacts-path:
        type: string
        required: false
        default: build/libs
        description: Artifacts path, default is build/libs. Must be a folder.
      node-version:
        description: Node.js version.
        type: string
        required: false
        default: "18"
      pnpm-version:
        description: pnpm version.
        type: string
        required: false
        default: "8"
      java-version:
        description: Java version.
        type: string
        required: false
        default: "17"
      ui-path:
        description: Path of UI project.
        type: string
        required: false
        default: "console"
      skip-node-setup:
        description: Indicates if the node setup should be skipped.
        type: boolean
        required: false
        default: false
      skip-appstore-release:
        description: Indicates if the appstore release should be skipped.
        type: boolean
        required: false
        default: false
      app-id:
        description: Application ID from Halo App Store.
        required: false
        type: string
        default: not-configured-app-id
      halo-backend-baseurl:
        description: Base URL of Halo App Store.
        required: false
        default: https://www.halo.run
        type: string
      npm-registry-url:
        type: string
        default: ""
        description: NPM registry.
        required: false
    secrets:
      halo-pat:
        description: Personal access token of Halo Appstore.
        required: false
      npm-auth-token:
        description: NPM auth token.
        required: false
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        uses: halo-sigs/reusable-workflows/plugin-setup-env@main
        with:
          cache-dept-path: ${{ inputs.ui-path }}/pnpm-lock.yaml
          skip-node-setup: ${{ inputs.skip-node-setup }}
          node-version: ${{ inputs.node-version }}
          pnpm-version: ${{ inputs.pnpm-version }}
          java-version: ${{ inputs.java-version }}
          npm-registry-url: ${{ inputs.npm-registry-url }}
      - name: Build
        run: |
          version=${{ github.event.release.tag_name }}
          ./gradlew -Pversion=${version#v} build -x check
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm-auth-token }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
          retention-days: 1

  github-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
      - name: Upload Release Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ${{ inputs.artifacts-path }}/*
  appstore-release:
    name: App Store Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'release' && !inputs.skip-appstore-release }}
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: ${{ inputs.artifacts-path }}
      - name: Release to App Store
        uses: halo-sigs/app-store-release-action@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          app-id: ${{ inputs.app-id }}
          halo-backend-baseurl: ${{ inputs.halo-backend-baseurl }}
          release-id: ${{ github.event.release.id }}
          assets-dir: ${{ inputs.artifacts-path }}
          halo-pat: ${{ secrets.halo-pat }}
